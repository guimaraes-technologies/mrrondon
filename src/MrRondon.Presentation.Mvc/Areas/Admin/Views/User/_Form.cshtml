@model MrRondon.Presentation.Mvc.ViewModels.UsuarioContatoVm
@if (Model != null)
{
    <div class="field">
        @Html.LabelFor(model => model.Cpf)
        <div class="ui segment spba-m-0" style="padding: 0.67857143em 1em;box-shadow: none">
            @Html.DisplayFor(model => model.Cpf)
            @Html.HiddenFor(model => model.Cpf)
        </div>
    </div>
}
else
{
    <div class="field">
        @Html.LabelFor(model => model.Cpf)
        @Html.SemanticTextCpfFor(model => model.Cpf, new { autocomplete = "off" })
    </div>
}
<div class="two fields">
    <div class="field">
        @Html.LabelFor(model => model.Nome)
        @Html.SemanticTextBoxFor(model => model.Nome, null)
    </div>
    <div class="field">
        @Html.LabelFor(model => model.Sobrenome)
        @Html.SemanticTextBoxFor(model => model.Sobrenome, null)
    </div>
</div>
<div class="field">
    @Html.LabelFor(model => model.RolesIds)
    @Html.SemanticEnumDropDownListFor(model => model.RolesIds, ViewBag.Roles as SelectList, "Selecione...", new { @class = "ui fluid dropdown spba-drop-role", data_setresult = "#dropEntidades", data_dropcompare = "Entidade" })
</div>
<div id="dropEntidades" class="field" style="display: @(Model?.EntidadeId != null ? "block" : "none")">
    @Html.Label("Entidade")
    @Html.SemanticDropDownListFor(model => model.EntidadeId, ViewBag.EntidadeId as SelectList, "Selecione...", new { @class = "ui search fluid dropdown" })
</div>
<div class="lista-contato">
    @Html.Action("Contatos", "Usuario", new { area = "Coordenador", usuarioContatoVm = Model })
</div>